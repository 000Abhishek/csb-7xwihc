{"version":3,"sources":["index.js"],"names":["todoList","comdoList","remList","addButton","document","getElementById","todoInput","deleteAllButton","allTodos","deleteSButton","update","filter","ele","complete","innerText","length","toString","add","value","push","task","id","Date","now","addinmain","alert","innerHTML","forEach","element","x","concat","deleteTodo","e","deleted","target","parentElement","getAttribute","completeTodo","completed","obj","console","log","querySelector","classList","remove","deleteAll","todo","deleteS","viewCompleted","viewRemaining","viewAll","addEventListener","className","split","key"],"mappings":";AAAA,IAAIA,EAAW,GACXC,EAAY,GACZC,EAAU,GACVC,EAAYC,SAASC,eAAe,cACpCC,EAAYF,SAASC,eAAe,cACpCE,EAAkBH,SAASC,eAAe,cAC1CG,EAAWJ,SAASC,eAAe,aACnCI,EAAgBL,SAASC,eAAe,mBAsC5C,SAASK,IACLT,EAAYD,EAASW,OAAO,SAACC,GACzB,OAAOA,EAAIC,WAGfX,EAAUF,EAASW,OAAO,SAACC,GACvB,OAAQA,EAAIC,WAEhBT,SAASC,eAAe,WAAWS,UAAYd,EAASe,OAAOC,WAC/DZ,SAASC,eAAe,WAAWS,UAAYb,EAAUc,OAAOC,WAMpE,SAASC,IACL,IAAIC,EAAQZ,EAAUY,MACR,KAAVA,GAIJlB,EAASmB,KAAK,CACVC,KAAMF,EACNG,GAAIC,KAAKC,MAAMP,WACfH,UAAU,IAGdP,EAAUY,MAAQ,GAGlBR,IACAc,EAAUxB,IAbNyB,MAAM,wBAmBd,SAASD,EAAUxB,GACfQ,EAASkB,UAAY,GACrB1B,EAAS2B,QAAQ,SAAAC,GACb,IAAIC,EAACC,UAAAA,OAAaF,EAAQP,GAAES,2CAAAA,OAChBF,EAAQf,SAAQiB,WAAAA,OAAcF,EAAQR,KAAkBQ,aAAAA,EAAQR,KAUtE,4WACNZ,EAASkB,WAAaG,IAM9B,SAASE,EAAWC,GAChB,IAAIC,EAAUD,EAAEE,OAAOC,cAAcA,cAAcC,aAAa,MAChEpC,EAAWA,EAASW,OAAO,SAACC,GACxB,OAAOA,EAAIS,IAAMY,IAGrBvB,IACAc,EAAUxB,GAKd,SAASqC,EAAaL,GAClB,IAAIM,EAAYN,EAAEE,OAAOC,cAAcA,cAAcC,aAAa,MAClEpC,EAAS2B,QAAQ,SAACY,GACVA,EAAIlB,IAAMiB,IACU,GAAhBC,EAAI1B,UACJ0B,EAAI1B,UAAW,EACf2B,QAAQC,IAAIT,EAAEE,OAAOC,cAAcA,eAEnCH,EAAEE,OAAOC,cAAcA,cAAcO,cAAc,SAASC,UAAU1B,IAAI,UAE1EsB,EAAI1B,UAAW,EAEfmB,EAAEE,OAAOC,cAAcA,cAAcO,cAAc,SAASC,UAAUC,OAAO,YAMzFlC,IACAc,EAAUxB,GAKd,SAAS6C,EAAUC,GAEf9C,EAAW,GAEXU,IACAc,EAAUxB,GAKd,SAAS+C,EAAQD,GAEb9C,EAAWA,EAASW,OAAO,SAACC,GACxB,OAAQA,EAAIC,WAIhBH,IACAc,EAAUxB,GAMd,SAASgD,IACLxB,EAAUvB,GAGd,SAASgD,IAELzB,EAAUtB,GAEd,SAASgD,IACL1B,EAAUxB,GAjKdG,EAAUgD,iBAAiB,QAASlC,GACpCV,EAAgB4C,iBAAiB,QAASN,GAC1CpC,EAAc0C,iBAAiB,QAASJ,GAIxC3C,SAAS+C,iBAAiB,QAAS,SAACnB,GACQ,YAApCA,EAAEE,OAAOkB,UAAUC,MAAM,KAAK,IAAwD,MAApCrB,EAAEE,OAAOkB,UAAUC,MAAM,KAAK,IAChFhB,EAAaL,GAEuB,UAApCA,EAAEE,OAAOkB,UAAUC,MAAM,KAAK,IAAsD,MAApCrB,EAAEE,OAAOkB,UAAUC,MAAM,KAAK,IAC9EtB,EAAWC,GAGI,OAAfA,EAAEE,OAAOb,IACT6B,IAEe,OAAflB,EAAEE,OAAOb,IACT4B,IAEe,OAAfjB,EAAEE,OAAOb,IACT2B,MAKR5C,SAAS+C,iBAAiB,WAAY,SAACnB,GACrB,UAAVA,EAAEsB,KACFrC","file":"source.ac563cc2.js","sourceRoot":"..","sourcesContent":["var todoList = []\nvar comdoList = [];\nvar remList = [];\nvar addButton = document.getElementById(\"add-button\")\nvar todoInput = document.getElementById(\"todo-input\")\nvar deleteAllButton = document.getElementById(\"delete-all\")\nvar allTodos = document.getElementById(\"all-todos\");\nvar deleteSButton = document.getElementById(\"delete-selected\")\n\n\n//event listners for add and delete\naddButton.addEventListener(\"click\", add)\ndeleteAllButton.addEventListener(\"click\", deleteAll)\ndeleteSButton.addEventListener(\"click\", deleteS)\n\n\n//event listeners for filtersk\ndocument.addEventListener('click', (e) => {\n    if (e.target.className.split(' ')[0] == 'complete' || e.target.className.split(' ')[0] == 'ci') {\n        completeTodo(e);\n    }\n    if (e.target.className.split(' ')[0] == 'delete' || e.target.className.split(' ')[0] == 'di') {\n        deleteTodo(e)\n    }\n\n    if (e.target.id == \"all\") {\n        viewAll();\n    }\n    if (e.target.id == \"rem\") {\n        viewRemaining();\n    }\n    if (e.target.id == \"com\") {\n        viewCompleted();\n    }\n\n})\n//event listner for enter key\ndocument.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n        add();\n    }\n});\n\n\n//updates the all the remaining, completed and main list\nfunction update() {\n    comdoList = todoList.filter((ele) => {\n        return ele.complete\n\n    })\n    remList = todoList.filter((ele) => {\n        return !ele.complete\n    })\n    document.getElementById(\"r-count\").innerText = todoList.length.toString();\n    document.getElementById(\"c-count\").innerText = comdoList.length.toString();\n\n}\n\n//adds the task in main list\n\nfunction add() {\n    var value = todoInput.value;\n    if (value === '') {\n        alert(\"Task cannot be empty\")\n        return;\n    }\n    todoList.push({\n        task: value,\n        id: Date.now().toString(),\n        complete: false,\n    });\n\n    todoInput.value = \"\"\n\n\n    update();\n    addinmain(todoList);\n}\n\n\n//renders the main list and views on the main content\n\nfunction addinmain(todoList) {\n    allTodos.innerHTML = \"\"\n    todoList.forEach(element => {\n        var x = `<li id=${element.id} class=\"todo-item\">\n    <p id=\"task\"> ${element.complete ? `<strike>${element.task}</strike>` : element.task} </p>\n    <div class=\"todo-actions\">\n                <button class=\"complete btn btn-success\">\n                    <i class=\" ci bx bx-check bx-sm\"></i>\n                </button>\n\n                <button class=\"delete btn btn-error\" >\n                    <i class=\"di bx bx-trash bx-sm\"></i>\n                </button>\n            </div>\n        </li>`\n        allTodos.innerHTML += x\n    });\n}\n\n\n//deletes and indiviual task and update all the list\nfunction deleteTodo(e) {\n    var deleted = e.target.parentElement.parentElement.getAttribute('id');\n    todoList = todoList.filter((ele) => {\n        return ele.id != deleted\n    })\n\n    update();\n    addinmain(todoList);\n\n}\n\n//completes indiviaula task and updates all the list\nfunction completeTodo(e) {\n    var completed = e.target.parentElement.parentElement.getAttribute('id');\n    todoList.forEach((obj) => {\n        if (obj.id == completed) {\n            if (obj.complete == false) {\n                obj.complete = true\n                console.log(e.target.parentElement.parentElement)\n\n                e.target.parentElement.parentElement.querySelector(\"#task\").classList.add(\"line\");\n            } else {\n                obj.complete = false\n\n                e.target.parentElement.parentElement.querySelector(\"#task\").classList.remove(\"line\");\n            }\n\n        }\n    })\n\n    update();\n    addinmain(todoList);\n}\n\n\n//deletes all the tasks\nfunction deleteAll(todo) {\n\n    todoList = []\n\n    update();\n    addinmain(todoList);\n\n}\n\n//deletes only completed task\nfunction deleteS(todo) {\n\n    todoList = todoList.filter((ele) => {\n        return !ele.complete;\n    })\n\n\n    update();\n    addinmain(todoList);\n\n}\n\n\n// functions for filters\nfunction viewCompleted() {\n    addinmain(comdoList);\n}\n\nfunction viewRemaining() {\n\n    addinmain(remList);\n}\nfunction viewAll() {\n    addinmain(todoList);\n}"]}